name: Backend Tests

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main, master, develop ]
    paths:
      - 'backend/**'
  workflow_dispatch:  # Allow manual triggering

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      # MongoDB service container
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-cov
    
    - name: Verify MongoDB connection
      run: |
        apt-get update && apt-get install -y mongodb-clients
        mongosh --eval 'db.runCommand({ ping: 1 })'
    
    - name: Run tests
      working-directory: ./backend
      env:
        ENV: pytest
        MONGODB_URI: mongodb://localhost:27017
        FASTAPI_SECRET: test_secret_key_for_ci
      run: |
        pytest tests/ -v
    
    - name: Generate coverage report
      working-directory: ./backend
      run: |
        pytest --cov=api --cov=analytiq_data tests/ --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        fail_ci_if_error: false 