name: Backend Tests

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main, master, develop ]
    paths:
      - 'backend/**'
  workflow_dispatch:  # Allow manual triggering

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      # MongoDB service container
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        # No health check - we'll verify connection in a step

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-cov pymongo
    
    - name: Verify MongoDB connection
      run: |
        # Use Python to verify MongoDB connection instead of shell tools
        python -c "
        import pymongo
        client = pymongo.MongoClient('mongodb://localhost:27017/')
        print('MongoDB connection successful:', client.server_info())
        "
    
    - name: Run tests
      working-directory: ./backend
      env:
        ENV: pytest
        MONGODB_URI: mongodb://localhost:27017
        FASTAPI_SECRET: test_secret_key_for_ci
      run: |
        pytest tests/ -v
    
    - name: Generate coverage report
      working-directory: ./backend
      run: |
        pytest --cov=api --cov=analytiq_data tests/ --cov-report=xml --cov-report=term
        
    - name: Generate coverage badge
      uses: tj-actions/coverage-badge-py@v2
      with:
        output: coverage.svg
        coverage-xml: backend/coverage.xml
        
    - name: Move badge to docs/assets
      run: |
        mkdir -p docs/assets
        mv coverage.svg docs/assets/
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        fail_ci_if_error: false
        
    - name: Commit coverage badge
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add docs/assets/coverage.svg
        git commit -m "Update coverage badge" || echo "No changes to commit"
        git push 