services:
  frontend:
    image: analytiqhub/doc-router-frontend:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend
      args:
        # Build-time environment
        - NEXT_PUBLIC_FASTAPI_FRONTEND_URL=${NEXT_PUBLIC_FASTAPI_FRONTEND_URL:-http://localhost:8000}
        - NODE_ENV=production
    environment:
      # Runtime environment
      - ENV=${ENV:-dev}
      - MONGODB_URI=${MONGODB_URI:-mongodb://mongodb:27017}
      - FASTAPI_BACKEND_URL=${FASTAPI_BACKEND_URL:-http://localhost:8000}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-default_secret_for_development}
      - AUTH_GITHUB_ID=${AUTH_GITHUB_ID}
      - AUTH_GITHUB_SECRET=${AUTH_GITHUB_SECRET}
      - AUTH_GOOGLE_ID=${AUTH_GOOGLE_ID}
      - AUTH_GOOGLE_SECRET=${AUTH_GOOGLE_SECRET}
      - NEXT_PUBLIC_FASTAPI_FRONTEND_URL=${NEXT_PUBLIC_FASTAPI_FRONTEND_URL:-http://localhost:8000}
    command: sh -c "cd /app/frontend && npm run start"
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - doc-router-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  backend:
    image: analytiqhub/doc-router-backend:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: backend
    environment:
      # Runtime environment
      - ENV=${ENV:-dev}
      - MONGODB_URI=${MONGODB_URI:-mongodb://mongodb:27017}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - FASTAPI_ROOT_PATH=${FASTAPI_ROOT_PATH:-/fastapi}
      - FASTAPI_SECRET=${FASTAPI_SECRET:-default_fastapi_secret_for_development}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - SES_FROM_EMAIL=${SES_FROM_EMAIL}
    command: sh -c "cd /app/backend/api && uvicorn main:app --host 0.0.0.0 --port 8000"
    restart: unless-stopped
    ports:
      - "8000:8000"
    networks:
      - doc-router-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  worker:
    image: analytiqhub/doc-router-backend:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: backend
    environment:
      # Runtime environment
      - ENV=${ENV:-dev}
      - N_WORKERS=${N_WORKERS:-1}
      - MONGODB_URI=${MONGODB_URI:-mongodb://mongodb:27017}
      - FASTAPI_SECRET=${FASTAPI_SECRET:-default_fastapi_secret_for_development}
    command: sh -c "cd /app/backend/worker && python3 worker.py"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    networks:
      - doc-router-network
    environment:
      # Update the user/pass and MONGODB_URI in .env
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD:-password}
    volumes:
      - mongodb_data:/data/db
    profiles: ["with-mongodb"]
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

networks:
  doc-router-network:
    driver: bridge

volumes:
  mongodb_data: